services:

  oreo:
    container_name: oreo
    restart: always
    image: mongo:4.2.0
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${OREO_SA_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${OREO_SA_PASSWORD}
    ports:
      - "9019:27017"
    networks:
      - main

  biscuit:
    container_name: biscuit
    restart: always
    image: mongo:4.2.0
    environment:
      MONGO_PORT: 27017
      MONGO_INITDB_ROOT_USERNAME: ${BISCUIT_SA_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${BISCUIT_SA_PASSWORD}
    command: ["--replSet", "dbrs", "--bind_ip_all"]
    ports:
      - "9017:27017"
    networks:
      - main

  biscuit-init:
    container_name: biscuit-init
    image: mongo:4.2.0
    depends_on:
      - biscuit
    restart: "no"
    entrypoint: >
      bash -c '
        echo "Waiting for mongo to be ready";
        until mongo --host biscuit -u ${BISCUIT_SA_USERNAME} -p ${BISCUIT_SA_PASSWORD} --eval "db.adminCommand(\"ping\")" > /dev/null 2>&1; do
          sleep 1;
        done;
        echo "Initializing replicaset...";
        mongo --host biscuit -u ${BISCUIT_SA_USERNAME} -p ${BISCUIT_SA_PASSWORD} --eval "rs.initiate({_id: \"dbrs\", members: [{ _id: 0, host: \"biscuit:27017\" }]})"
      '
    networks:
      - main

  kit-kat:
    container_name: kit-kat
    restart: always
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.0
    environment:
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    ports:
      - "9002:9200"
      - "9003:9300"
    networks:
      - main

  hit:
    container_name: hit
    image: redis:6.2.6
    restart: always
    ports:
      - '36379:6379'
    command: redis-server --save 20 1 --loglevel warning --protected-mode no
    networks:
      - main

  macarons:
    container_name: macarons
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: ${MACARONS_SA_USERNAME}
      POSTGRES_PASSWORD: ${MACARONS_SA_PASSWORD}
      POSTGRES_DB: ${MACARONS_DB}
    ports:
      - "9004:5432"
    volumes:
      - macarons-data:/var/lib/postgresql/data
    networks:
      - main

volumes:
  macarons-data:

networks:
  main:
    external: true
